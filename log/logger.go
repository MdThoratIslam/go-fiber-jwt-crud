package logger

import (
	"fmt"
	"io"
	"os"
	"time"

	"github.com/gofiber/fiber/v2/log"
)

// тЬЕ рж▓ржЧ ржлрж╛ржЗрж▓ ржПржмржВ ржХржирж╕рзЛрж▓рзЗ рж▓ржЧрж┐ржВ рж╕рзЗржЯржЖржк
func init() {
	// рж▓ржЧ ржлрж╛ржЗрж▓ рждрзИрж░рж┐ / ржУржкрзЗржи ржХрж░рж╛ (Append Mode)
	// %s ржжрж┐рзЯрзЗ рждрж╛рж░рж┐ржЦ ржлрж░ржорзНржпрж╛ржЯ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ (2006-01-02) ржПржмржВ ржлрж╛ржЗрж▓рзЗрж░ ржирж╛ржо рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
	fileName := fmt.Sprintf("log/app/app_%s.log", time.Now().Format("02-01-2006"))
	logFile, err := os.OpenFile(fileName, os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)
	if err != nil {
		fmt.Println("тЭМ Could not open log file:", err)
	}

	// тЬЕ рж▓ржЧ ржлрж╛ржЗрж▓ ржПржмржВ ржХржирж╕рзЛрж▓рзЗ ржПржХрж╕рж╛ржерзЗ рж▓ржЧ ржкрзНрж░рж┐ржирзНржЯ ржХрж░рж╛
	multiWriter := io.MultiWriter(os.Stdout, logFile)
	log.SetOutput(multiWriter)

	// тЬЕ рж▓ржЧ рж▓рзЗржнрзЗрж▓ рж╕рзЗржЯ ржХрж░рж╛ (INFO ржПрж░ ржирж┐ржЪрзЗрж░ рж▓ржЧ ржЧрзБрж▓рзЛ ржкрзНрж░рж┐ржирзНржЯ рж╣ржмрзЗ ржирж╛)
	log.SetLevel(log.LevelInfo)

	// тЬЕ рж▓ржЧрж┐ржВ рж╢рзБрж░рзБ
	log.Info("ЁЯЪА Logger initialized successfully!")
}

// тЬЕ Custom Error log function
func Error(msg string, err error) {
	if err != nil {
		log.Errorf("%s: %s", msg, err.Error())
	} else {
		log.Error(msg)
	}
}

// тЬЕ Custom Success log function
func Success(msg string) {
	log.Info(msg)
}

// тЬЕ Custom Warning log function
func Warn(msg string) {
	log.Warn(msg)
}

// тЬЕ Custom Debug log function
func Debug(msg string) {
	log.Debug(msg)
}
